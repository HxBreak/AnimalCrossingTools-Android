import java.time.Instant

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: "androidx.navigation.safeargs.kotlin"

def currentTime = { ->
    Instant.now().toEpochMilli()
}

def fetchGitShortHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    signingConfigs {
        release {
            storeFile file(properties.getProperty("KeyStorePath"))
            storePassword properties.getProperty("StorePassword")
            keyAlias properties.getProperty("KeyAlias")
            keyPassword properties.getProperty("KeyPassword")
        }
    }
    compileSdkVersion 30
    buildToolsVersion "30.0.5"

    buildFeatures {
        viewBinding { enabled true }
    }

    defaultConfig {
        applicationId "com.hxbreak.animalcrossingtools"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 3
        versionName "0.1alpha"

        testInstrumentationRunner "com.hxbreak.animalcrossingtools.utilities.MainTestRunner"

//        externalNativeBuild {
//            cmake {
//                cppFlags "-std=c++17"
//                arguments "-DCMAKE_VERBOSE_MAKEFILE=ON"
//                abiFilters 'arm64-v8a', 'armeabi-v7a'
//            }
//        }
//        ndk {
//            abiFilters 'armeabi-v7a'
//        }

        multiDexEnabled = true
        signingConfig signingConfigs.release

        resValue("string", "_build_date", "${currentTime()}")
        resValue("string", "_internal_version", "${fetchGitShortHash()}")
    }

    androidExtensions {
        experimental = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    android {
        defaultConfig {
            vectorDrawables.useSupportLibrary = true
        }
        testOptions {
            unitTests.includeAndroidResources = true
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
//        freeCompilerArgs = ["-XXLanguage:+NewInference"]
        freeCompilerArgs += "-Xopt-in=kotlin.contracts.ExperimentalContracts"
        freeCompilerArgs += "-Xopt-in=kotlin.time.ExperimentalTime"
        freeCompilerArgs += "-Xopt-in=kotlin.experimental.ExperimentalTypeInference"
        freeCompilerArgs += "-Xopt-in=androidx.paging.ExperimentalPagingApi"
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
    }

//    externalNativeBuild {
//        cmake {
//            path "src/main/cpp/CMakeLists.txt"
//        }
//    }

/**
 sourceSets {
 String shared = "src/shared/java"
 main {
 java {
 srcDirs += shared
 srcDir += shared
 }
 jniLibs.srcDirs = ["src/main/jni"]
 }
 }
 */


    lintOptions {
        disable "EnsureInitializerMetadata", "NullSafeMutableLiveData", "InvalidFragmentVersionForActivityResult"
    }

    packagingOptions {
        exclude "META-INF/*"
    }

    splits {
        abi {
            enable true
            reset()
            include "x86", "x86_64", "armeabi-v7a", "arm64-v8a"
            universalApk true
        }
    }

}

dependencies {
    implementation project(path: ':stun')
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$assistedInjectVersion"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$assistedInjectVersion"

    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar']).matching {}

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.annotation:annotation:$androidXAnnotations"
    implementation "com.google.android.material:material:$materialVersion"
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$archLifecycleVersion"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation "com.github.bumptech.glide:okhttp3-integration:4.11.0"

    // Architecture Components
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"


    implementation("com.squareup.okhttp3:okhttp:3.14.9")
    implementation("com.squareup.okio:okio:2.2.2")
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:converter-gson:+'

    implementation group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '3.14.7'

    implementation(project(":tracker_proto"))

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'

    implementation group: 'com.belerweb', name: 'pinyin4j', version: '2.5.0'
    implementation 'com.github.promeg:tinypinyin:2.0.3' // TinyPinyin核心包，约80KB
    implementation 'com.github.promeg:tinypinyin-lexicons-android-cncity:2.0.3'

    implementation "com.jakewharton.timber:timber:$timberVersion"
    //    implementation(project(":recyclerview-fastscroll"))
    def paging_version = "3.0.0-beta01"

    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    def exoplayer_version = "2.11.7"
    implementation "com.google.android.exoplayer:exoplayer:$exoplayer_version"
    implementation "com.google.android.exoplayer:extension-mediasession:$exoplayer_version"
    implementation "androidx.startup:startup-runtime:1.0.0"
    implementation "androidx.recyclerview:recyclerview-selection:$recyclerViewVersion"
    implementation project(':flutter')
    implementation 'com.google.android:flexbox:2.0.1'
    def fragmentVersion = "1.3.1"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation group: 'io.netty', name: 'netty-all', version: '4.1.53.Final'

    implementation(project(":shared"))

    implementation "com.google.dagger:hilt-android:$rootProject.hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$rootProject.hiltViewModelVersion"
    kapt "androidx.hilt:hilt-compiler:$rootProject.hiltViewModelVersion"
    implementation "com.drakeet.multitype:multitype:4.2.0"

    testImplementation "androidx.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"
    testImplementation 'org.mockito:mockito-core:3.5.10'
    testImplementation 'androidx.test:core:1.3.0'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.testExtJunit"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$rootProject.uiAutomatorVersion"
    androidTestImplementation "com.google.truth:truth:$rootProject.truthVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$rootProject.hiltVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"
}
